name: Laravel CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.1', '8.2', '8.3']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
        coverage: xdebug

    - name: Get Composer Cache Directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-interaction --no-progress

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Generate application key
      run: php artisan key:generate

    - name: Set directory permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create SQLite database
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Configure SQLite for testing
      run: |
        echo "DB_CONNECTION=sqlite" >> .env
        echo "DB_DATABASE=database/database.sqlite" >> .env

    - name: Run migrations
      run: php artisan migrate --force

    - name: Run database seeders
      run: php artisan db:seed --force
      continue-on-error: true

    - name: Execute tests (Unit and Feature tests) via PHPUnit
      run: php artisan test --coverage

    - name: Run Laravel Pint (Code Style)
      run: ./vendor/bin/pint --test
      continue-on-error: true

    - name: Run PHPStan (Static Analysis)
      run: ./vendor/bin/phpstan analyse
      continue-on-error: true
